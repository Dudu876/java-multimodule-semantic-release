# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Build with Maven
      run: ./mvnw -B package -Dpartial.buildAll=true
    # - name: Docker build
    #   run: docker build -t dudu876/java-semantic-release .
    - name: setup semantic-release
      run: npm install -g semantic-release @semantic-release/exec @semantic-release/git @semantic-release/changelog @semantic-release-plus/docker -D
    # - name: release core
    #   working-directory: ./core
    #   run: npx semantic-release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     DOCKER_USERNAME: Dudu876
    #     DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    # - name: release 1
    #   working-directory: ./service1
    #   run: npx semantic-release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     DOCKER_USERNAME: Dudu876
    #     DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    # - name: release 2
    #   working-directory: ./service2
    #   run: npx semantic-release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     DOCKER_USERNAME: Dudu876
    #     DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    # - name: commit changelog
    #   run: |
    #       git config --global user.name 'semantic-release-bot'
    #       git config --global user.email 'semantic-release-bot@martynus.net'
    #       git add '**/CHANGELOG.md' .
    #       git commit -m "chore(changelog): Update CHANGELOGs [skip ci]"
    #       git push